# General
# ================================
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_add = '''
let g:deoplete#enable_at_startup = 1
" Use TAB to forward cycle
inoremap <silent><expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
" Use Shift-TAB to backward cycle
inoremap <silent><expr><S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"
'''


[[plugins]]
depends = ['deoplete.nvim', 'neosnippet-snippets']
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertEnter'
hook_add = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-s> <Plug>(neosnippet_expand_or_jump)
smap <C-s> <Plug>(neosnippet_expand_or_jump)
xmap <C-s> <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <expr><TAB>
      \ pumvisible() ? "\<C-n>" :
      \ neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

let g:neosnippet#snippets_directory = '~/dotfiles/vim/snippets,~/dotfiles-private/vim/snippets'
let g:deoplete#enable_at_startup = 1
'''


[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_event = 'InsertEnter'


# Python
# ================================
[[plugins]]
depends = ['deoplete-jedi']
repo = 'davidhalter/jedi-vim'
on_event = 'InsertEnter'
on_ft = ['python']
hook_add = '''
" Do not select the first line of the completion menu
let g:jedi#popup_select_first = 0
" Disable JEDI-VIM for Deoplete-JEDI
let g:jedi#completions_enabled = 0
" Disable docstring
autocmd FileType python setlocal completeopt-=preview
'''


[[plugins]]
depends = ['deoplete.nvim']
repo = 'deoplete-plugins/deoplete-jedi'
on_event = 'InsertEnter'
on_ft = ['python']


[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_event = 'InsertEnter'
on_ft = ['python']


# Markdown
# ================================
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_add = '''
let g:vim_markdown_folding_disabled=1
let g:vim_markdown_frontmatter=1
let g:vim_markdown_new_list_item_indent=0
let g:vim_markdown_conceal_code_blocks=0
'''


# Go
# ================================
[[plugins]]
depends = ['zchee/deoplete-go']
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
let g:go_jump_to_error = 0
let g:go_fmt_autosave = 0
let g:go_imports_autosave = 0

let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_operators = 1
'''


[[plugins]]
repo = 'deoplete-plugins/deoplete-go'
build = 'make'
on_ft = ['go']
hook_add = '''
let g:deoplete#sources#go#gocode_binary=$GOPATH.'/bin/gocode'
'''


# TOML
# ================================
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']
rev = 'main'


# ANTLR
# ================================
[[plugins]]
repo = 'jrozner/vim-antlr'
on_ft = ['antlr']


# JavaScript
# ================================
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript', 'typescript']


# TypeScript
# ================================
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']


# Racket
# ================================
[[plugins]]
repo = 'wlangstroth/vim-racket'
on_ft = ['racket', 'scheme']


# LaTeX
# ================================
[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['latex', 'tex']
hook_add = '''
let g:vimtex_compiler_latexmk_engines = {
  \ '_'        : '-pdfdvi',
  \ 'pdflatex' : '-pdf'
  \ }
let g:vimtex_compiler_latexmk = {
  \ 'options'  : []
  \ }
let g:vimtex_view_general_viewer =
  \ '/Applications/Skim.app/Contents/SharedSupport/displayline'
let g:vimtex_view_general_options = '-r @line @pdf @tex'
let g:vimtex_compiler_progname = 'nvr'
'''


# GraphQL
# ================================
[[plugins]]
repo = 'jparise/vim-graphql'
on_ft = ['javascript', 'typescript', 'graphql']


# JSON
# ================================
[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
let g:vim_json_syntax_conceal = 0
'''


# Terraform
# ================================
# https://github.com/hashivim/vim-terraform
[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = ['terraform']
hook_add = '''
let g:terraform_align = 1
'''

[[plugins]]
repo = 'ipkiss42/xwiki.vim.git'
on_ft = ['xwiki']
